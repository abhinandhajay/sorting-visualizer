{"version":3,"sources":["algorithms/BubbleSort.js","algorithms/InsertionSort.js","algorithms/QuickSort.js","algorithms/SelectionSort.js","components/Bar.jsx","components/Button.jsx","components/Visualizer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["bubbleSort","array","console","log","temp","sortedArray","animations","i","length","j","push","insertionSort","key","partition","low","high","pivot","quickSort","pi","selectionSort","minHeight","minPos","Bar","props","useEffect","className","style","height","value","Button","onClick","children","Visualizer","useState","setArray","setSortedArray","window","innerWidth","arraySize","innerHeight","arrayHeight","timeoutIdList","resetArray","allBars","document","querySelectorAll","Math","round","random","backgroundColor","map","x","sort","a","b","timeout","clearTimeout","playAnimations","ANIMATION_DELAY_MS","timeoutId","setTimeout","undefined","comp","swap","ele","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mSAsBeA,EAtBI,SAACC,GACnBC,QAAQC,IAAI,0BAIZ,IAHA,IACIC,EADAC,EAAcJ,EAEdK,EAAa,GACRC,EAAI,EAAGA,EAAIF,EAAYG,OAAS,EAAGD,IAC3C,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAYG,OAASD,EAAI,EAAGE,IAC3CJ,EAAYI,GAAKJ,EAAYI,EAAE,KAClCL,EAAOC,EAAYI,GACnBJ,EAAYI,GAAKJ,EAAYI,EAAE,GAC/BJ,EAAYI,EAAE,GAAKL,EAGnBE,EAAWI,KAAK,CAAC,KAAQ,CAACD,EAAGA,EAAE,KAC/BH,EAAWI,KAAK,CAAC,KAAQ,CAACD,EAAGA,EAAE,KAC/BH,EAAWI,KAAK,CAAC,KAAQ,CAACD,EAAGA,EAAE,MAIlC,MAAO,CAAEJ,cAAaC,eCCRK,EApBO,SAACV,GAGtB,IAFA,IAAII,EAAcJ,EACdK,EAAa,GACRC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAAK,CAI5C,IAHA,IAAIK,EAAMP,EAAYE,GAClBE,EAAIF,EAAI,EAELE,GAAK,GAAKJ,EAAYI,GAAKG,GACjCP,EAAYI,EAAI,GAAKJ,EAAYI,GAEjCH,EAAWI,KAAK,CAAC,KAAQ,CAACD,EAAGA,EAAI,KACjCH,EAAWI,KAAK,CAAC,KAAQ,CAACD,EAAGA,EAAI,KACjCH,EAAWI,KAAK,CAAC,KAAQ,CAACD,EAAGA,EAAI,KACjCA,GAAK,EAENJ,EAAYI,EAAI,GAAKG,EAEtB,MAAO,CAAEP,cAAaC,eCPjBO,EAAY,SAACZ,EAAOa,EAAKC,EAAMT,GAKpC,IAJA,IAAIF,EACAY,EAAQf,EAAMc,GACdR,EAAKO,EAAM,EAENL,EAAIK,EAAKL,GAAKM,EAAO,EAAGN,IAC5BR,EAAMQ,GAAKO,IAGdZ,EAAOH,IAFPM,GAGAN,EAAMM,GAAKN,EAAMQ,GACjBR,EAAMQ,GAAKL,EAEXE,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAGE,KAC7BH,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAGE,KAC7BH,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAGE,MAU/B,OAPAL,EAAOH,EAAMM,EAAI,GACjBN,EAAMM,EAAI,GAAKN,EAAMc,GACrBd,EAAMc,GAAQX,EAEdE,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAI,EAAGQ,KACjCT,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAI,EAAGQ,KACjCT,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAI,EAAGQ,KACzBR,EAAI,GAGEU,EAtCG,SAAZA,EAAahB,EAAOa,EAAKC,EAAMT,GAEpC,GAAIQ,EAAMC,EAAM,CACf,IAAIG,EAAKL,EAAUZ,EAAOa,EAAKC,EAAMT,GAErCW,EAAUhB,EAAOa,EAAKI,EAAK,EAAGZ,GAC9BW,EAAUhB,EAAOiB,EAAK,EAAGH,EAAMT,KCmBlBa,EAzBO,SAAClB,GAItB,IAHA,IACIG,EADAC,EAAcJ,EAEdK,EAAa,GACRC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAAK,CAG5C,IAFA,IAAIa,EAAYf,EAAYE,GACxBc,EAASd,EACJE,EAAIF,EAAI,EAAGE,EAAIJ,EAAYG,OAAQC,IACvCW,EAAYf,EAAYI,KAC3BW,EAAYf,EAAYI,GACxBY,EAASZ,GAGXL,EAAOC,EAAYE,GACnBF,EAAYE,GAAKF,EAAYgB,GAC7BhB,EAAYgB,GAAUjB,EAGtBE,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAGc,KAC7Bf,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAGc,KAC7Bf,EAAWI,KAAK,CAAC,KAAQ,CAACH,EAAGc,KAE9B,MAAO,CAAEhB,cAAaC,e,eCLRgB,EAZH,SAACC,GAMZ,OAJAC,qBAAU,cAEP,IAGF,qBAAKC,UAAU,WAAWC,MAAO,CAACC,OAAO,GAAD,OAAKJ,EAAMK,MAAX,UCD3BC,G,MATA,SAACN,GAEf,OACC,wBAAQO,QAASP,EAAMO,QAASL,UAAWF,EAAME,UAAjD,SACEF,EAAMQ,aC+JKC,G,MAzJI,WAElB,MAA0BC,mBAAS,IAAnC,mBAAOhC,EAAP,KAAciC,EAAd,KACA,EAAsCD,mBAAS,IAA/C,mBAAO5B,EAAP,KAAoB8B,EAApB,KACA,EAAsBF,mBAASG,OAAOC,WAAa,GAA5CC,EAAP,oBACA,EAAwBL,mBAASG,OAAOG,YAAc,KAA/CC,EAAP,oBACMC,EAAgB,GAEhBC,EAAa,WAGlB,IAFA,IAAMtC,EAAO,GACPuC,EAAUC,SAASC,iBAAT,aACPtC,EAAI,EAAGA,EAAI+B,EAAW/B,IAC9BH,EAAKM,KAAKoC,KAAKC,MAAMD,KAAKE,SAAWR,GAAe,IAChDG,EAAQpC,KACXoC,EAAQpC,GAAGmB,MAAMuB,gBAAjB,oBAGFf,EAAS9B,GACT+B,EAAe/B,EAAK8C,KAAI,SAAAC,GAAC,OAAIA,KAAGC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MACnD,IAAK,IAAI/C,EAAI,EAAGA,EAAI+B,EAAW/B,IAC1BoC,EAAQpC,KACXoC,EAAQpC,GAAGmB,MAAMuB,gBAAjB,mBACAN,EAAQpC,GAAGmB,MAAMC,OAAjB,UAA6BvB,EAAKG,GAAlC,OAdsB,oBAiBJkC,GAjBI,IAiBxB,2BAAmC,CAAC,IAA3Bc,EAA0B,QAClCC,aAAaD,IAlBU,gCAmDnBE,EAAiB,SAACnD,EAAYoD,GAGnC,IAFA,IAAMf,EAAUC,SAASC,iBAAT,aAD0C,WAGjDtC,GAER,IAAIoD,EAAYC,YAAW,WAK1B,QAJ2BC,IAAvBvD,EAAWC,GAAGuD,OACjBnB,EAAQrC,EAAWC,GAAGuD,KAAK,IAAIpC,MAAMuB,gBAAkB1C,EAAI,IAAM,EAAV,yCACvDoC,EAAQrC,EAAWC,GAAGuD,KAAK,IAAIpC,MAAMuB,gBAAkB1C,EAAI,IAAM,EAAV,+CAE7BsD,IAAvBvD,EAAWC,GAAGwD,KAAoB,CACrC,IAAI3D,EAAOuC,EAAQrC,EAAWC,GAAGwD,KAAK,IAAIrC,MAAMC,OAChDgB,EAAQrC,EAAWC,GAAGwD,KAAK,IAAIrC,MAAMC,OAASgB,EAAQrC,EAAWC,GAAGwD,KAAK,IAAIrC,MAAMC,OACnFgB,EAAQrC,EAAWC,GAAGwD,KAAK,IAAIrC,MAAMC,OAASvB,EAC1C,UAAGC,EAAYC,EAAWC,GAAGwD,KAAK,IAAlC,QAA8CpB,EAAQrC,EAAWC,GAAGwD,KAAK,IAAIrC,MAAMC,SACtFgB,EAAQrC,EAAWC,GAAGwD,KAAK,IAAIrC,MAAMuB,gBAArC,mBAEG,UAAG5C,EAAYC,EAAWC,GAAGwD,KAAK,IAAlC,QAA8CpB,EAAQrC,EAAWC,GAAGwD,KAAK,IAAIrC,MAAMC,SACtFgB,EAAQrC,EAAWC,GAAGwD,KAAK,IAAIrC,MAAMuB,gBAArC,sBAGAS,EAAqBnD,GAExBkC,EAAc/B,KAAKiD,IApBXpD,EAAI,EAAGA,EAAID,EAAWE,OAAQD,IAAM,EAApCA,IA6DV,OAJAiB,qBAAU,WACTkB,MACE,IAGF,gCACC,oDACA,sBAAKjB,UAAU,wBAAf,UACC,cAAC,EAAD,CAAQK,QAjGc,WACxB,IAAM4B,EAAqB,IAAOpB,EAC1BhC,EAAea,EAAclB,GAA7BK,WAERmD,EAAenD,EAAYoD,IA6FzB,uBAGA,cAAC,EAAD,CAAQ5B,QA7FW,WACrB,IAAM4B,EAAqB,IAAMpB,EACzBhC,EAAeN,EAAWC,GAA1BK,WAERmD,EAAenD,EAAYoD,IAyFzB,oBAGA,cAAC,EAAD,CAAQ5B,QAzFc,WACxB,IAAM4B,EAAqB,IAAMpB,EACzBhC,EAAeK,EAAcV,GAA7BK,WAERmD,EAAenD,EAAYoD,IAqFzB,uBAGA,cAAC,EAAD,CAAQ5B,QArFU,WACpB,IAAM4B,EAAqB,IAAMpB,EAC3BhC,EAAa,GACnBW,EAAUhB,EAAO,EAAGA,EAAMO,OAAS,EAAGF,GAEtCmD,EAAenD,EAAYoD,IAgFzB,sBAOD,cAAC,EAAD,CAAQ5B,QAASY,EAAYjB,UAAW,SAAxC,yBAGA,qBAAKA,UAAU,gBAAf,SACExB,EAAMiD,KAAI,SAACc,EAAKC,GAAN,OAAe,cAAC,EAAD,CAAerC,MAAOoC,GAAZC,a,MCpJzBC,MARf,WACC,OACC,qBAAKzC,UAAU,MAAf,SACC,cAAC,EAAD,OCMY0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,SAM1BZ,M","file":"static/js/main.f0ea10d0.chunk.js","sourcesContent":["const bubbleSort = (array) => {\n\tconsole.log('Performing Bubble Sort')\n\tlet sortedArray = array\n\tlet temp\n\tlet animations = []\n\tfor (let i = 0; i < sortedArray.length - 1; i++) {\n\t\tfor (let j = 0; j < sortedArray.length - i - 1; j++) {\n\t\t\tif (sortedArray[j] > sortedArray[j+1]) {\n\t\t\t\ttemp = sortedArray[j]\n\t\t\t\tsortedArray[j] = sortedArray[j+1]\n\t\t\t\tsortedArray[j+1] = temp\n\n\t\t\t\t// Add animations\n\t\t\t\tanimations.push({'comp': [j, j+1]})\n\t\t\t\tanimations.push({'comp': [j, j+1]})\n\t\t\t\tanimations.push({'swap': [j, j+1]})\n\t\t\t}\n\t\t}\n\t}\n\treturn { sortedArray, animations }\n}\n\nexport default bubbleSort;\n\n","const insertionSort = (array) => {\n\tlet sortedArray = array\n\tlet animations = []\n\tfor (let i = 1; i < sortedArray.length; i++) {\n\t\tlet key = sortedArray[i]\n\t\tlet j = i - 1\n\n\t\twhile (j >= 0 && sortedArray[j] > key) {\n\t\t\tsortedArray[j + 1] = sortedArray[j]\n\t\t\t// Add animations\n\t\t\tanimations.push({'comp': [j, j + 1]})\n\t\t\tanimations.push({'comp': [j, j + 1]})\n\t\t\tanimations.push({'swap': [j, j + 1]})\n\t\t\tj -= 1\n\t\t}\n\t\tsortedArray[j + 1] = key\n\t}\n\treturn { sortedArray, animations }\n}\n\nexport default insertionSort;","const quickSort = (array, low, high, animations) => {\n\n\tif (low < high) {\n\t\tlet pi = partition(array, low, high, animations);\n\n\t\tquickSort(array, low, pi - 1, animations);\n\t\tquickSort(array, pi + 1, high, animations);\n\t}\n}\n\nconst partition = (array, low, high, animations) => {\n\tlet temp\n\tlet pivot = array[high];\n\tlet i = (low - 1) \n\n\tfor (let j = low; j <= high - 1; j++) {\n\t\tif (array[j] < pivot) {\n\t\t\ti++;\n\n\t\t\ttemp = array[i]\n\t\t\tarray[i] = array[j]\n\t\t\tarray[j] = temp\n\n\t\t\tanimations.push({'comp': [i, j]})\n\t\t\tanimations.push({'comp': [i, j]})\n\t\t\tanimations.push({'swap': [i, j]})\n\t\t}\n\t}\n\ttemp = array[i + 1]\n\tarray[i + 1] = array[high]\n\tarray[high] = temp\n\n\tanimations.push({'comp': [i + 1, high]})\n\tanimations.push({'comp': [i + 1, high]})\n\tanimations.push({'swap': [i + 1, high]})\n\treturn (i + 1)\n}\n\nexport default quickSort;","const selectionSort = (array) => {\n\tlet sortedArray = array\n\tlet temp\n\tlet animations = []\n\tfor (let i = 0; i < sortedArray.length; i++) {\n\t\tlet minHeight = sortedArray[i]\n\t\tlet minPos = i\n\t\tfor (let j = i + 1; j < sortedArray.length; j++) {\n\t\t\tif (minHeight > sortedArray[j]) {\n\t\t\t\tminHeight = sortedArray[j]\n\t\t\t\tminPos = j\n\t\t\t}\n\t\t}\n\t\ttemp = sortedArray[i]\n\t\tsortedArray[i] = sortedArray[minPos]\n\t\tsortedArray[minPos] = temp\n\n\t\t// Add animations\n\t\tanimations.push({'comp': [i, minPos]})\n\t\tanimations.push({'comp': [i, minPos]})\n\t\tanimations.push({'swap': [i, minPos]})\n\t}\n\treturn { sortedArray, animations }\n}\n\nexport default selectionSort;","import { useEffect } from 'react';\nimport './Bar.css';\n\n\n\nconst Bar = (props) => {\n\n\tuseEffect(() => {\n\t\t\n\t}, [])\n\n\treturn (\n\t\t<div className='main-bar' style={{height: `${props.value}px`}}>\n\t\t</div>\n\t);\n}\n\nexport default Bar;","import './Button.css'\n\nconst Button = (props) => {\n\n\treturn (\n\t\t<button onClick={props.onClick} className={props.className}>\n\t\t\t{props.children}\n\t\t</button>\n\t)\n}\n\nexport default Button;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from 'react';\nimport bubbleSort from '../algorithms/BubbleSort';\nimport insertionSort from '../algorithms/InsertionSort';\nimport quickSort from '../algorithms/QuickSort';\nimport selectionSort from '../algorithms/SelectionSort';\nimport Bar from './Bar';\nimport Button from './Button';\nimport './Visualizer.css';\n\n// const ANIMATION_DELAY_MS = 10\n\nconst Visualizer = () => {\n\n\tconst [array, setArray] = useState([])\n\tconst [sortedArray, setSortedArray] = useState([])\n\tconst [arraySize, ] = useState(window.innerWidth / 9)\n\tconst [arrayHeight, ] = useState(window.innerHeight / 1.4)\n\tconst timeoutIdList = []\n\n\tconst resetArray = () => {\n\t\tconst temp = []\n\t\tconst allBars = document.querySelectorAll(`.main-bar`)\n\t\tfor (let i = 0; i < arraySize; i++) {\n\t\t\ttemp.push(Math.round(Math.random() * arrayHeight) + 10)\n\t\t\tif (allBars[i]) {\n\t\t\t\tallBars[i].style.backgroundColor = `var(--app-green)`\n\t\t\t}\n\t\t}\n\t\tsetArray(temp)\n\t\tsetSortedArray(temp.map(x => x).sort((a, b) => a - b))\n\t\tfor (let i = 0; i < arraySize; i++) {\n\t\t\tif (allBars[i]) {\n\t\t\t\tallBars[i].style.backgroundColor = `var(--app-green)`\n\t\t\t\tallBars[i].style.height = `${temp[i]}px`\n\t\t\t}\n\t\t}\n\t\tfor (let timeout of timeoutIdList) {\n\t\t\tclearTimeout(timeout)\n\t\t}\n\t}\n\n\tconst runSelectionSort = () => {\n\t\tconst ANIMATION_DELAY_MS = 1000 / arraySize\n\t\tconst { animations } = selectionSort(array)\n\n\t\tplayAnimations(animations, ANIMATION_DELAY_MS)\n\t}\n\n\tconst runBubbleSort = () => {\n\t\tconst ANIMATION_DELAY_MS = 100 / arraySize\n\t\tconst { animations } = bubbleSort(array)\n\n\t\tplayAnimations(animations, ANIMATION_DELAY_MS)\n\t}\n\n\tconst runInsertionSort = () => {\n\t\tconst ANIMATION_DELAY_MS = 100 / arraySize\n\t\tconst { animations } = insertionSort(array)\n\n\t\tplayAnimations(animations, ANIMATION_DELAY_MS)\n\t}\n\n\tconst runQuickSort = () => {\n\t\tconst ANIMATION_DELAY_MS = 600 / arraySize\n\t\tconst animations = []\n\t\tquickSort(array, 0, array.length - 1, animations)\n\n\t\tplayAnimations(animations, ANIMATION_DELAY_MS)\n\t}\n\t\n\tconst playAnimations = (animations, ANIMATION_DELAY_MS) => {\n\t\tconst allBars = document.querySelectorAll(`.main-bar`)\n\n\t\tfor (let i = 0; i < animations.length; i++) {\n\n\t\t\tlet timeoutId = setTimeout(() => {\n\t\t\t\tif (animations[i].comp !== undefined) {\n\t\t\t\t\tallBars[animations[i].comp[0]].style.backgroundColor = i % 3 === 0 ? `rgb(var(--app-red))` : `var(--app-green)`\n\t\t\t\t\tallBars[animations[i].comp[1]].style.backgroundColor = i % 3 === 0 ? `rgb(var(--app-red))` : `var(--app-green)`\n\t\t\t\t}\n\t\t\t\tif (animations[i].swap !== undefined) {\n\t\t\t\t\tlet temp = allBars[animations[i].swap[0]].style.height\n\t\t\t\t\tallBars[animations[i].swap[0]].style.height = allBars[animations[i].swap[1]].style.height\n\t\t\t\t\tallBars[animations[i].swap[1]].style.height = temp\n\t\t\t\t\tif (`${sortedArray[animations[i].swap[0]]}px` === allBars[animations[i].swap[0]].style.height) {\n\t\t\t\t\t\tallBars[animations[i].swap[0]].style.backgroundColor = `var(--app-pink)`\n\t\t\t\t\t}\n\t\t\t\t\tif (`${sortedArray[animations[i].swap[1]]}px` === allBars[animations[i].swap[1]].style.height) {\n\t\t\t\t\t\tallBars[animations[i].swap[1]].style.backgroundColor = `var(--app-pink)`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, ANIMATION_DELAY_MS * i)\n\n\t\t\ttimeoutIdList.push(timeoutId)\n\t\t}\n\t}\n\n\t// const testAlgorithms = () => {\n\t// \tlet temp = []\n\t// \tconsole.log('TESTING SELECTION')\n\t// \tfor (let i = 0; i < 100 ; i++) {\n\t// \t\ttemp = []\n\t// \t\tfor (let i = 0; i < arraySize; i++) {\n\t// \t\t\ttemp.push(Math.round(Math.random() * 700) + 10)\n\t// \t\t}\n\n\t// \t\tlet jsSorted = temp.sort((a, b) => a - b)\n\t// \t\tlet { sortedArray } = selectionSort(temp)\n\n\t// \t\tif (checkEquality(sortedArray, jsSorted)) {\n\t// \t\t\tconsole.log(true)\n\t// \t\t} else {\n\t// \t\t\tconsole.log(false)\n\t// \t\t}\n\t// \t}\n\t\t\n\t// }\n\n\t// const checkEquality = (sortedArray, jsSorted) => {\n\t// \tif (sortedArray.length !== jsSorted.length) {\n\t// \t\treturn false\n\t// \t}\n\t// \tfor (let i = 0 ; i < sortedArray.length; i++) {\n\t// \t\tif (sortedArray[i] !== jsSorted[i]) {\n\t// \t\t\treturn false\n\t// \t\t}\n\t// \t}\n\t// \treturn true\n\t// }\n\n\tuseEffect(() => {\n\t\tresetArray()\n\t}, [])\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Sorting Visualizer</h1>\n\t\t\t<div className=\"sort-button-container\">\n\t\t\t\t<Button onClick={runSelectionSort}>\n\t\t\t\t\tSelection\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={runBubbleSort}>\n\t\t\t\t\tBubble\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={runInsertionSort}>\n\t\t\t\t\tInsertion\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={runQuickSort}>\n\t\t\t\t\tQuick\n\t\t\t\t</Button>\n\t\t\t\t{/* <Button onClick={testAlgorithms}>\n\t\t\t\tTest Algorithms\n\t\t\t\t</Button> */}\n\t\t\t</div>\n\t\t\t<Button onClick={resetArray} className={'bg-red'}>\n\t\t\t\tReset Array\n\t\t\t</Button>\n\t\t\t<div className='bar-container'>\n\t\t\t\t{array.map((ele, idx) => (<Bar key={idx} value={ele}></Bar>))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Visualizer;","import Visualizer from './components/Visualizer';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Visualizer></Visualizer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}