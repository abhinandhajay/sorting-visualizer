{"version":3,"sources":["algorithms/SelectionSort.js","components/Bar.jsx","components/Visualizer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["selectionSort","array","temp","sortedArray","animations","i","length","minHeight","minPos","j","push","Bar","props","useEffect","className","style","height","value","Visualizer","useState","setArray","arraySize","resetArray","allBars","document","querySelectorAll","Math","round","random","backgroundColor","checkEquality","jsSorted","onClick","setTimeout","undefined","comp","swap","console","log","sort","a","b","map","ele","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6500d2f.chunk.js","sourcesContent":["const selectionSort = (array) => {\n\tlet sortedArray = array\n\tlet temp\n\tlet animations = []\n\tfor (let i = 0; i < sortedArray.length; i++) {\n\t\tlet minHeight = sortedArray[i]\n\t\tlet minPos = i\n\t\tfor (let j = i + 1; j < sortedArray.length; j++) {\n\t\t\tif (minHeight > sortedArray[j]) {\n\t\t\t\tminHeight = sortedArray[j]\n\t\t\t\tminPos = j\n\t\t\t}\n\t\t}\n\t\ttemp = sortedArray[i]\n\t\tsortedArray[i] = sortedArray[minPos]\n\t\tsortedArray[minPos] = temp\n\n\t\t// Add animations\n\t\tanimations.push({'comp': [i, minPos]})\n\t\tanimations.push({'comp': [i, minPos]})\n\t\tanimations.push({'swap': [i, minPos]})\n\t}\n\treturn { sortedArray, animations }\n}\n\nexport default selectionSort;","import { useEffect } from 'react';\nimport './Bar.css';\n\n\n\nconst Bar = (props) => {\n\n\tuseEffect(() => {\n\t\t\n\t}, [])\n\n\treturn (\n\t\t<div className='main-bar' style={{height: `${props.value}px`}}>\n\t\t</div>\n\t);\n}\n\nexport default Bar;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from 'react';\nimport selectionSort from '../algorithms/SelectionSort';\nimport Bar from './Bar';\nimport './Visualizer.css';\n\nconst ANIMATION_DELAY_MS = 5\n\nconst Visualizer = () => {\n\n\tconst [array, setArray] = useState([])\n\tconst [arraySize, setArraySize] = useState(170)\n\n\tconst resetArray = () => {\n\t\tconst temp = []\n\t\tconst allBars = document.querySelectorAll(`.main-bar`)\n\t\tfor (let i = 0; i < arraySize; i++) {\n\t\t\ttemp.push(Math.round(Math.random() * 700) + 10)\n\t\t\tif (allBars[i]) {\n\t\t\t\tallBars[i].style.backgroundColor = 'aquamarine'\n\t\t\t}\n\t\t}\n\t\tsetArray(temp)\n\t}\n\n\tconst runSelectionSort = () => {\n\t\tconst { animations } = selectionSort(array)\n\n\t\tlet allBars = document.querySelectorAll(`.main-bar`)\n\n\t\tfor (let i = 0; i < animations.length; i++) {\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (animations[i].comp !== undefined) {\n\t\t\t\t\tallBars[animations[i].comp[0]].style.backgroundColor = i % 3 === 0 ? 'red' : 'aquamarine'\n\t\t\t\t\tallBars[animations[i].comp[1]].style.backgroundColor = i % 3 === 0 ? 'red' : 'aquamarine'\n\t\t\t\t}\n\t\t\t\tif (animations[i].swap !== undefined) {\n\t\t\t\t\tlet temp = allBars[animations[i].swap[0]].style.height\n\t\t\t\t\tallBars[animations[i].swap[0]].style.height = allBars[animations[i].swap[1]].style.height\n\t\t\t\t\tallBars[animations[i].swap[1]].style.height = temp\n\t\t\t\t\tallBars[animations[i].swap[0]].style.backgroundColor = 'plum'\n\t\t\t\t}\n\t\t\t}, ANIMATION_DELAY_MS * i)\n\t\t}\n\t}\n\n\tconst testAlgorithms = () => {\n\t\tlet temp = []\n\t\tconsole.log('TESTING SELECTION')\n\t\tfor (let i = 0; i < 100 ; i++) {\n\t\t\ttemp = []\n\t\t\tfor (let i = 0; i < arraySize; i++) {\n\t\t\t\ttemp.push(Math.round(Math.random() * 700) + 10)\n\t\t\t}\n\n\t\t\tlet jsSorted = temp.sort((a, b) => a - b)\n\t\t\tlet { sortedArray } = selectionSort(temp)\n\n\t\t\tif (checkEquality(sortedArray, jsSorted)) {\n\t\t\t\tconsole.log(true)\n\t\t\t} else {\n\t\t\t\tconsole.log(false)\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n\tconst checkEquality = (sortedArray, jsSorted) => {\n\t\tif (sortedArray.length !== jsSorted.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (let i = 0 ; i < sortedArray.length; i++) {\n\t\t\tif (sortedArray[i] !== jsSorted[i]) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tuseEffect(() => {\n\t\tresetArray()\n\t}, [])\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Sorting Visualizer</h1>\n\t\t\t<button onClick={resetArray}>\n\t\t\t\tReset Array\n\t\t\t</button>\n\t\t\t<button onClick={runSelectionSort}>\n\t\t\t\tSelection Sort\n\t\t\t</button>\n\t\t\t<button onClick={testAlgorithms}>\n\t\t\t\tTest Algorithms\n\t\t\t</button>\n\t\t\t<div className='bar-container'>\n\t\t\t\t{array.map((ele, idx) => (<Bar key={idx} value={ele}></Bar>))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Visualizer;","import Visualizer from './components/Visualizer';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Visualizer></Visualizer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}